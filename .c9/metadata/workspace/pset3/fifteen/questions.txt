{"filter":false,"title":"questions.txt","tooltip":"/pset3/fifteen/questions.txt","undoManager":{"mark":100,"position":100,"stack":[[{"start":{"row":6,"column":4},"end":{"row":6,"column":11},"action":"remove","lines":["from 3 "],"id":74},{"start":{"row":6,"column":4},"end":{"row":6,"column":5},"action":"insert","lines":["B"]}],[{"start":{"row":6,"column":5},"end":{"row":6,"column":6},"action":"insert","lines":["e"],"id":75}],[{"start":{"row":6,"column":6},"end":{"row":6,"column":7},"action":"insert","lines":["t"],"id":76}],[{"start":{"row":6,"column":7},"end":{"row":6,"column":8},"action":"insert","lines":["w"],"id":77}],[{"start":{"row":6,"column":8},"end":{"row":6,"column":9},"action":"insert","lines":["e"],"id":78}],[{"start":{"row":6,"column":9},"end":{"row":6,"column":10},"action":"insert","lines":["e"],"id":79}],[{"start":{"row":6,"column":10},"end":{"row":6,"column":11},"action":"insert","lines":["n"],"id":80}],[{"start":{"row":6,"column":11},"end":{"row":6,"column":12},"action":"insert","lines":[" "],"id":81}],[{"start":{"row":6,"column":12},"end":{"row":6,"column":13},"action":"insert","lines":["3"],"id":82}],[{"start":{"row":6,"column":13},"end":{"row":6,"column":14},"action":"insert","lines":[" "],"id":83}],[{"start":{"row":6,"column":14},"end":{"row":6,"column":21},"action":"insert","lines":["& × & ×"],"id":84}],[{"start":{"row":6,"column":18},"end":{"row":6,"column":19},"action":"remove","lines":["&"],"id":85}],[{"start":{"row":6,"column":18},"end":{"row":6,"column":19},"action":"remove","lines":[" "],"id":86}],[{"start":{"row":6,"column":17},"end":{"row":6,"column":18},"action":"remove","lines":[" "],"id":87}],[{"start":{"row":6,"column":16},"end":{"row":6,"column":17},"action":"remove","lines":["×"],"id":88}],[{"start":{"row":6,"column":15},"end":{"row":6,"column":16},"action":"remove","lines":[" "],"id":89}],[{"start":{"row":6,"column":14},"end":{"row":6,"column":15},"action":"remove","lines":["&"],"id":90}],[{"start":{"row":6,"column":14},"end":{"row":6,"column":15},"action":"remove","lines":["×"],"id":91},{"start":{"row":6,"column":14},"end":{"row":6,"column":15},"action":"insert","lines":["×"]}],[{"start":{"row":6,"column":15},"end":{"row":6,"column":16},"action":"insert","lines":[" "],"id":92}],[{"start":{"row":6,"column":16},"end":{"row":6,"column":17},"action":"insert","lines":["3"],"id":93}],[{"start":{"row":6,"column":17},"end":{"row":6,"column":18},"action":"insert","lines":[" "],"id":94}],[{"start":{"row":6,"column":18},"end":{"row":6,"column":19},"action":"insert","lines":["a"],"id":95}],[{"start":{"row":6,"column":19},"end":{"row":6,"column":20},"action":"insert","lines":["n"],"id":96}],[{"start":{"row":6,"column":20},"end":{"row":6,"column":21},"action":"insert","lines":["d"],"id":97}],[{"start":{"row":6,"column":21},"end":{"row":6,"column":22},"action":"insert","lines":[" "],"id":98}],[{"start":{"row":6,"column":22},"end":{"row":6,"column":23},"action":"insert","lines":["9"],"id":99}],[{"start":{"row":6,"column":23},"end":{"row":6,"column":24},"action":"insert","lines":[" "],"id":100}],[{"start":{"row":6,"column":24},"end":{"row":6,"column":25},"action":"insert","lines":["×"],"id":101}],[{"start":{"row":6,"column":25},"end":{"row":6,"column":26},"action":"insert","lines":[" "],"id":102}],[{"start":{"row":6,"column":26},"end":{"row":6,"column":27},"action":"insert","lines":[" "],"id":103}],[{"start":{"row":6,"column":27},"end":{"row":6,"column":28},"action":"insert","lines":["9"],"id":104}],[{"start":{"row":6,"column":27},"end":{"row":6,"column":28},"action":"remove","lines":["9"],"id":105}],[{"start":{"row":6,"column":26},"end":{"row":6,"column":27},"action":"remove","lines":[" "],"id":106}],[{"start":{"row":6,"column":26},"end":{"row":6,"column":27},"action":"insert","lines":["9"],"id":107}],[{"start":{"row":6,"column":27},"end":{"row":6,"column":28},"action":"insert","lines":[";"],"id":108}],[{"start":{"row":7,"column":0},"end":{"row":7,"column":4},"action":"remove","lines":["    "],"id":109}],[{"start":{"row":6,"column":28},"end":{"row":7,"column":0},"action":"remove","lines":["",""],"id":110}],[{"start":{"row":6,"column":27},"end":{"row":6,"column":28},"action":"remove","lines":[";"],"id":111}],[{"start":{"row":6,"column":27},"end":{"row":6,"column":28},"action":"insert","lines":["."],"id":112}],[{"start":{"row":8,"column":3},"end":{"row":8,"column":7},"action":"remove","lines":["TODO"],"id":114},{"start":{"row":8,"column":3},"end":{"row":8,"column":68},"action":"insert","lines":["With what sort of data structure is the game’s board represented?"]}],[{"start":{"row":8,"column":68},"end":{"row":9,"column":0},"action":"insert","lines":["",""],"id":115}],[{"start":{"row":9,"column":0},"end":{"row":10,"column":0},"action":"insert","lines":["",""],"id":116}],[{"start":{"row":9,"column":0},"end":{"row":9,"column":4},"action":"insert","lines":["    "],"id":117}],[{"start":{"row":11,"column":3},"end":{"row":11,"column":7},"action":"remove","lines":["TODO"],"id":118},{"start":{"row":11,"column":3},"end":{"row":13,"column":0},"action":"insert","lines":["What function is called to greet the player at game’s start?","",""]}],[{"start":{"row":12,"column":0},"end":{"row":12,"column":4},"action":"insert","lines":["    "],"id":119}],[{"start":{"row":14,"column":3},"end":{"row":14,"column":7},"action":"remove","lines":["TODO"],"id":120},{"start":{"row":14,"column":3},"end":{"row":16,"column":0},"action":"insert","lines":["What functions do you apparently need to implement?","",""]}],[{"start":{"row":15,"column":0},"end":{"row":15,"column":4},"action":"insert","lines":["    "],"id":121}],[{"start":{"row":12,"column":4},"end":{"row":12,"column":5},"action":"insert","lines":["o"],"id":123}],[{"start":{"row":12,"column":5},"end":{"row":12,"column":6},"action":"insert","lines":["r"],"id":124}],[{"start":{"row":12,"column":5},"end":{"row":12,"column":6},"action":"remove","lines":["r"],"id":125}],[{"start":{"row":12,"column":4},"end":{"row":12,"column":5},"action":"remove","lines":["o"],"id":126}],[{"start":{"row":12,"column":4},"end":{"row":12,"column":5},"action":"insert","lines":["p"],"id":127}],[{"start":{"row":12,"column":5},"end":{"row":12,"column":6},"action":"insert","lines":["r"],"id":128}],[{"start":{"row":12,"column":6},"end":{"row":12,"column":7},"action":"insert","lines":["i"],"id":129}],[{"start":{"row":12,"column":7},"end":{"row":12,"column":8},"action":"insert","lines":["n"],"id":130}],[{"start":{"row":12,"column":8},"end":{"row":12,"column":9},"action":"insert","lines":["t"],"id":131}],[{"start":{"row":12,"column":9},"end":{"row":12,"column":10},"action":"insert","lines":["t"],"id":132}],[{"start":{"row":12,"column":9},"end":{"row":12,"column":10},"action":"remove","lines":["t"],"id":133}],[{"start":{"row":12,"column":9},"end":{"row":12,"column":10},"action":"insert","lines":["f"],"id":134}],[{"start":{"row":12,"column":10},"end":{"row":12,"column":11},"action":"insert","lines":[" "],"id":135}],[{"start":{"row":12,"column":11},"end":{"row":12,"column":12},"action":"insert","lines":["t"],"id":136}],[{"start":{"row":12,"column":12},"end":{"row":12,"column":13},"action":"insert","lines":["h"],"id":137}],[{"start":{"row":12,"column":13},"end":{"row":12,"column":14},"action":"insert","lines":["e"],"id":138}],[{"start":{"row":12,"column":14},"end":{"row":12,"column":15},"action":"insert","lines":["n"],"id":139}],[{"start":{"row":12,"column":15},"end":{"row":12,"column":16},"action":"insert","lines":[" "],"id":140}],[{"start":{"row":12,"column":16},"end":{"row":12,"column":17},"action":"insert","lines":["w"],"id":141}],[{"start":{"row":12,"column":17},"end":{"row":12,"column":18},"action":"insert","lines":["a"],"id":142}],[{"start":{"row":12,"column":18},"end":{"row":12,"column":19},"action":"insert","lines":["i"],"id":143}],[{"start":{"row":12,"column":19},"end":{"row":12,"column":20},"action":"insert","lines":["t"],"id":144}],[{"start":{"row":12,"column":20},"end":{"row":12,"column":21},"action":"insert","lines":["i"],"id":145}],[{"start":{"row":12,"column":21},"end":{"row":12,"column":22},"action":"insert","lines":["n"],"id":146}],[{"start":{"row":12,"column":22},"end":{"row":12,"column":23},"action":"insert","lines":["g"],"id":147}],[{"start":{"row":12,"column":23},"end":{"row":12,"column":24},"action":"insert","lines":[" "],"id":148}],[{"start":{"row":12,"column":24},"end":{"row":12,"column":40},"action":"insert","lines":["usleep(2000000);"],"id":149}],[{"start":{"row":12,"column":39},"end":{"row":12,"column":40},"action":"remove","lines":[";"],"id":150}],[{"start":{"row":12,"column":39},"end":{"row":12,"column":40},"action":"insert","lines":["."],"id":151}],[{"start":{"row":6,"column":27},"end":{"row":6,"column":28},"action":"remove","lines":["."],"id":152}],[{"start":{"row":12,"column":39},"end":{"row":12,"column":40},"action":"remove","lines":["."],"id":153}],[{"start":{"row":15,"column":4},"end":{"row":15,"column":8},"action":"insert","lines":["init"],"id":154}],[{"start":{"row":15,"column":8},"end":{"row":15,"column":9},"action":"insert","lines":[","],"id":155}],[{"start":{"row":15,"column":9},"end":{"row":15,"column":10},"action":"insert","lines":[" "],"id":156}],[{"start":{"row":15,"column":10},"end":{"row":15,"column":11},"action":"insert","lines":["d"],"id":157}],[{"start":{"row":15,"column":11},"end":{"row":15,"column":12},"action":"insert","lines":["r"],"id":158}],[{"start":{"row":15,"column":12},"end":{"row":15,"column":13},"action":"insert","lines":["a"],"id":159}],[{"start":{"row":15,"column":13},"end":{"row":15,"column":14},"action":"insert","lines":["w"],"id":160}],[{"start":{"row":15,"column":14},"end":{"row":15,"column":15},"action":"insert","lines":[","],"id":161}],[{"start":{"row":15,"column":15},"end":{"row":15,"column":16},"action":"insert","lines":[" "],"id":162}],[{"start":{"row":15,"column":16},"end":{"row":15,"column":17},"action":"insert","lines":["n"],"id":163}],[{"start":{"row":15,"column":16},"end":{"row":15,"column":17},"action":"remove","lines":["n"],"id":164}],[{"start":{"row":15,"column":16},"end":{"row":15,"column":17},"action":"insert","lines":["m"],"id":165}],[{"start":{"row":15,"column":17},"end":{"row":15,"column":18},"action":"insert","lines":["o"],"id":166}],[{"start":{"row":15,"column":18},"end":{"row":15,"column":19},"action":"insert","lines":["v"],"id":167}],[{"start":{"row":15,"column":19},"end":{"row":15,"column":20},"action":"insert","lines":["e"],"id":168}],[{"start":{"row":15,"column":20},"end":{"row":15,"column":21},"action":"insert","lines":[","],"id":169}],[{"start":{"row":15,"column":21},"end":{"row":15,"column":22},"action":"insert","lines":[" "],"id":170}],[{"start":{"row":15,"column":22},"end":{"row":15,"column":23},"action":"insert","lines":["w"],"id":171}],[{"start":{"row":15,"column":23},"end":{"row":15,"column":24},"action":"insert","lines":["o"],"id":172}],[{"start":{"row":15,"column":24},"end":{"row":15,"column":25},"action":"insert","lines":["n"],"id":173}],[{"start":{"row":15,"column":25},"end":{"row":15,"column":26},"action":"insert","lines":["."],"id":174}],[{"start":{"row":15,"column":25},"end":{"row":15,"column":26},"action":"remove","lines":["."],"id":175}],[{"start":{"row":17,"column":0},"end":{"row":18,"column":0},"action":"insert","lines":["",""],"id":176}],[{"start":{"row":18,"column":0},"end":{"row":234,"column":1},"action":"insert","lines":["/**"," * fifteen.c"," *"," * Computer Science 50"," * Problem Set 3"," *"," * Implements Game of Fifteen (generalized to d x d)."," *"," * Usage: fifteen d"," *"," * whereby the board's dimensions are to be d x d,"," * where d must be in [DIM_MIN,DIM_MAX]"," *"," * Note that usleep is obsolete, but it offers more granularity than"," * sleep and is simpler to use than nanosleep; `man usleep` for more."," */"," ","#define _XOPEN_SOURCE 500","","#include <cs50.h>","#include <stdio.h>","#include <stdlib.h>","#include <unistd.h>","","// constants","#define DIM_MIN 3","#define DIM_MAX 9","","// board","int board[DIM_MAX][DIM_MAX];","","// dimensions","int d;","","// prototypes","void clear(void);","void greet(void);","void init(int d);","void draw(void);","bool move(int tile);","bool won(void);","","int main(int argc, string argv[])","{","    // ensure proper usage","    if (argc != 2)","    {","        printf(\"Usage: fifteen d\\n\");","        return 1;","    }","","    // ensure valid dimensions","    d = atoi(argv[1]);","    if (d < DIM_MIN || d > DIM_MAX)","    {","        printf(\"Board must be between %i x %i and %i x %i, inclusive.\\n\",","            DIM_MIN, DIM_MIN, DIM_MAX, DIM_MAX);","        return 2;","    }","","    // open log","    FILE* file = fopen(\"log.txt\", \"w\");","    if (file == NULL)","    {","        return 3;","    }","","    // greet user with instructions","    greet();","","    // initialize the board","    init(d);","","    // accept moves until game is won","    while (true)","    {","        // clear the screen","        clear();","","        // draw the current state of the board","        draw();","","        // log the current state of the board (for testing)","        for (int i = 0; i < d; i++)","        {","            for (int j = 0; j < d; j++)","            {","                fprintf(file, \"%i\", board[i][j]);","                if (j < d - 1)","                {","                    fprintf(file, \"|\");","                }","            }","            fprintf(file, \"\\n\");","        }","        fflush(file);","","        // check for win","        if (won())","        {","            printf(\"ftw!\\n\");","            break;","        }","","        // prompt for move","        printf(\"Tile to move: \");","        int tile = GetInt();","        ","        // quit if user inputs 0 (for testing)","        if (tile == 0)","        {","            break;","        }","","        // log move (for testing)","        fprintf(file, \"%i\\n\", tile);","        fflush(file);","","        // move if possible, else report illegality","        if (!move(tile))","        {","            printf(\"\\nIllegal move.\\n\");","            usleep(500000);","        }","","        // sleep thread for animation's sake","        usleep(500000);","    }","    ","    // close log","    fclose(file);","","    // success","    return 0;","}","","/**"," * Clears screen using ANSI escape sequences."," */","void clear(void)","{","    printf(\"\\033[2J\");","    printf(\"\\033[%d;%dH\", 0, 0);","}","","/**"," * Greets player."," */","void greet(void)","{","    clear();","    printf(\"WELCOME TO GAME OF FIFTEEN\\n\");","    usleep(1000000);","}","","/**"," * Initializes the game's board with tiles numbered 1 through d*d - 1"," * (i.e., fills 2D array with values but does not actually print them).  "," */","void init(int d)","{","    int aboard[d*d];","    if (d % 2 == 0)","    {","        for (int i = 0 ; i < d - 1 ; i++)","        {","            aboard[i] = d*d - i - 1;","        }","","        int temp = aboard[d*d - 2];","        aboard[d*d - 3] = aboard[d*d - 2];","        aboard[d*d - 3] = temp;","        ","    }","    else","    {","        for (int i = 0 ; i < d - 1 ; i++)","        {","            aboard[i] = d*d - i - 1;","        }","    }","","}","","/**"," * Prints the board in its current state."," */","void draw(void)","{","    for (int i = 0 ; i < d*d ; i++)","    {","        if (i % 5)","        printf(\"%i \", i);","    }","    printf(\"\\n\\n\");","","}","","/**"," * If tile borders empty space, moves tile and returns true, else"," * returns false. "," */","bool move(int tile)","{","    // TODO","    return false;","}","","/**"," * Returns true if game is won (i.e., board is in winning configuration), "," * else false."," */","bool won(void)","{","    // TODO","    return false;","}"],"id":177}]]},"ace":{"folds":[],"scrolltop":0,"scrollleft":0,"selection":{"start":{"row":18,"column":0},"end":{"row":18,"column":0},"isBackwards":false},"options":{"guessTabSize":true,"useWrapMode":false,"wrapToView":true},"firstLineState":0},"timestamp":1453300655951,"hash":"82e5deb20f2a72afccae229e98d56780722168d2"}